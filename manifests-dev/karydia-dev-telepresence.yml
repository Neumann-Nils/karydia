apiVersion: v1
kind: ServiceAccount
metadata:
  name: opa
  namespace: kube-system

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opa
  namespace: kube-system
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: opa
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: karydia
  labels:
    app: karydia
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: karydia
    spec:
      serviceAccount: opa
      containers:
      - name: telepresence
        image: datawire/telepresence-k8s:0.94
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
      - name: opa
        image: openpolicyagent/opa:0.10.1
        imagePullPolicy: IfNotPresent
        args:
          - "run"
          - "--server"
          - "--addr=:8181"
        ports:
        - containerPort: 8181
      - name: kube-mgmt
        image: openpolicyagent/kube-mgmt:0.7
        imagePullPolicy: Always
        args:
          - "--replicate-cluster=v1/namespaces"
          - "--replicate=v1/persistentvolumes"
          - "--replicate=v1/pods"
      volumes:
        - name: karydia-tls
          secret:
            secretName: karydia-tls

---

apiVersion: v1
kind: Service
metadata:
  name: karydia
  namespace: kube-system
  labels:
    app: karydia
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: karydia

---

apiVersion: v1
kind: Service
metadata:
  name: opa
  namespace: kube-system
  labels:
    app: opa
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8181
  selector:
    app: karydia
